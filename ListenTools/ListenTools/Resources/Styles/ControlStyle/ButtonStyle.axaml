<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:ext="clr-namespace:ListenTools.Controls.Extends"
    xmlns:ucs="clr-namespace:ListenTools.Controls"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  IconPathButton  -->
    <ControlTheme TargetType="{x:Type Button}" x:Key="IconPathButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="ext:ButtonExtend.IconStretch" Value="Uniform" />
        <Setter Property="ext:ElementExtend.PointOverBackground" Value="{Binding Path=$self.Background}" />
        <Setter Property="ext:ElementExtend.PointOverForeground" Value="{StaticResource PrimaryColor}" />
        <Setter Property="ext:ElementExtend.PressedBackground" Value="{Binding Path=$self.(ext:ElementExtend.PointOverBackground)}" />
        <Setter Property="ext:ElementExtend.PressedForeground" Value="{Binding Path=$self.(ext:ElementExtend.PointOverForeground)}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ClipToBounds="{TemplateBinding ClipToBounds}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Height="{TemplateBinding Height}"
                        Padding="{TemplateBinding Padding}"
                        Width="{TemplateBinding Width}">
                        <Border.Transitions>
                            <Transitions>
                                <BrushTransition
                                    Duration="0:0:0.167"
                                    Easing="SineEaseInOut"
                                    Property="Background" />
                            </Transitions>
                        </Border.Transitions>
                        <Path
                            Data="{TemplateBinding ext:ButtonExtend.IconPath}"
                            Fill="{TemplateBinding Foreground}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Stretch="{TemplateBinding ext:ButtonExtend.IconStretch}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Path.Transitions>
                                <Transitions>
                                    <BrushTransition
                                        Duration="0:0:0.167"
                                        Easing="SineEaseInOut"
                                        Property="Fill" />
                                </Transitions>
                            </Path.Transitions>
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style Selector="^:pointerover">
            <Style Selector="^ /template/ Path">
                <Setter Property="Fill" Value="{TemplateBinding ext:ElementExtend.PointOverForeground}" />
            </Style>
            <Style Selector="^ /template/ Border">
                <Setter Property="Background" Value="{TemplateBinding ext:ElementExtend.PointOverBackground}" />
            </Style>
        </Style>

        <Style Selector="^:pressed">
            <Style Selector="^ /template/ Path">
                <Setter Property="Fill" Value="{TemplateBinding ext:ElementExtend.PressedForeground}" />
            </Style>
            <Style Selector="^ /template/ Border">
                <Setter Property="Background" Value="{TemplateBinding ext:ElementExtend.PressedBackground}" />
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="0.97" ScaleY="0.97" />
                    </Setter.Value>
                </Setter>
            </Style>
        </Style>
    </ControlTheme>

    <!--  IconToggleButton  -->
    <ControlTheme
        BasedOn="{StaticResource IconPathButton}"
        TargetType="{x:Type ToggleButton}"
        x:Key="IconPathToggleButton">
        <Setter Property="ext:ButtonExtend.CheckedIconPath" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ext:ButtonExtend.IconPath)}" />
        <Style Selector="^:checked">
            <Style Selector="^ /template/ Path">
                <Setter Property="Data" Value="{TemplateBinding ext:ButtonExtend.CheckedIconPath}" />
            </Style>
        </Style>
    </ControlTheme>


</ResourceDictionary>
